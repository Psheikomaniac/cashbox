# .gitlab-ci.yml
stages:
  - build
  - test
  - deploy

services:
  - postgres:16-alpine

variables:
  POSTGRES_DB: cashbox_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/cashbox_test?serverVersion=16&charset=utf8"

# Job für das Bauen des Docker-Images
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker build -t cashbox:$CI_COMMIT_SHORT_SHA -f docker/php/Dockerfile --target php_prod .
    - docker save cashbox:$CI_COMMIT_SHORT_SHA | gzip > cashbox.tar.gz
  artifacts:
    paths:
      - cashbox.tar.gz
    expire_in: 1 day

# Job für PHPUnit-Tests
phpunit:
  stage: test
  image: php:8.4-fpm-alpine
  before_script:
    - apk add --no-cache git unzip libpq-dev postgresql-dev
    - docker-php-ext-install pdo pdo_pgsql
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - composer install --no-interaction
    - php bin/console doctrine:migrations:migrate --no-interaction --env=test
  script:
    - vendor/bin/phpunit

# Job für statische Codeanalyse mit PHPStan
phpstan:
  stage: test
  image: php:8.4-fpm-alpine
  before_script:
    - apk add --no-cache git unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - composer install --no-interaction
  script:
    - vendor/bin/phpstan analyse src --level=5

# Job für PHP CS Fixer
php-cs-fixer:
  stage: test
  image: php:8.4-fpm-alpine
  before_script:
    - apk add --no-cache git unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - composer install --no-interaction
  script:
    - vendor/bin/php-cs-fixer fix --dry-run --diff

# Job für Deployment in Produktion
deploy_prod:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - apk add --no-cache curl
  script:
    - docker load < cashbox.tar.gz
    - docker tag cashbox:$CI_COMMIT_SHORT_SHA registry.example.com/cashbox:latest
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.example.com
    - docker push registry.example.com/cashbox:latest
    - curl -X POST $DEPLOYMENT_WEBHOOK_URL
  only:
    - main
