
services:
  php:
    image: php:8.3-fpm-alpine
    container_name: cashbox_php
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - database
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://app:!ChangeMe!@database:5432/app?serverVersion=16&charset=utf8
    command: >
      sh -c "apk update &&
             apk add --no-cache git unzip libpq-dev postgresql-dev libpng-dev libjpeg-turbo-dev freetype-dev zlib-dev libzip-dev &&
             docker-php-ext-configure gd --with-freetype --with-jpeg &&
             docker-php-ext-install -j$(nproc) pdo pdo_pgsql zip gd &&
             php -m | grep gd &&
             php -r \"var_dump(extension_loaded('gd'));\" &&
             php -r \"var_dump(gd_info());\" &&
             curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
             cd /var/www &&
             composer update --no-interaction --ignore-platform-reqs &&
             composer require ramsey/uuid-doctrine --no-interaction --ignore-platform-reqs &&
             composer install --no-interaction --ignore-platform-reqs &&
             php bin/console doctrine:schema:update --force --no-interaction &&
             php -S 0.0.0.0:8000 -t public/"
    ports:
      - "8080:8000"

  cli:
    image: php:8.3-fpm-alpine
    container_name: cashbox_cli
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - database
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://app:!ChangeMe!@database:5432/app?serverVersion=16&charset=utf8
    command: >
      sh -c "apk update &&
             apk add --no-cache git unzip libpq-dev postgresql-dev libpng-dev libjpeg-turbo-dev freetype-dev zlib-dev libzip-dev &&
             docker-php-ext-configure gd --with-freetype --with-jpeg &&
             docker-php-ext-install -j$(nproc) pdo pdo_pgsql zip gd &&
             curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
             cd /var/www &&
             composer install --no-interaction --ignore-platform-reqs &&
             echo 'CLI container is ready. Use docker exec -it cashbox_cli sh to access the CLI' &&
             tail -f /dev/null"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: cashbox_database
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
###< doctrine/doctrine-bundle ###

  gitlab:
    image: gitlab/gitlab-ee:latest
    container_name: cashbox_gitlab
    hostname: gitlab.local
    ports:
      - "80:80"
      - "443:443"
      - "22:22"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    shm_size: '256m'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.local'
        gitlab_rails['gitlab_shell_ssh_port'] = 22
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/-/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  gitlab_config:
  gitlab_logs:
  gitlab_data:
